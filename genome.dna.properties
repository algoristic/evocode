# dnaProgramming:
# Every gene consists of hexadecimal characters and one
# leading non-hexadecimal char. (E.g. k1457ea0)
# The leading char ('k') defines the method where this gene will
# represents be decoded to java-code.
# Next three chars ('145') define the control structure to be
# applied (if, while, do-while, plain code) and where its
# conditions come from.
# The following pairs of chars ('7e', 'a0') define the instructions
# to be coded and their respective values.
# (E. g. '7' encode 'Robot::fire' and 'e' encodes '90% of max. power'.)

# Defines the minimum size of each gene.
# Note, that 5 is the absolute minimum, any smaller values
# will be overridden by the application.
evo.genome.dnaProgramming.gene.minSize=5
evo.genome.dnaProgramming.gene.maxSize=6
# Every gene consists of n hexadecimal characters.
# Every two characters encode one line of code.
# Consider the following genome:
# af36e1
# If overlapping e=false this gene encodes:
# g1=af, g2=36, g3=e1
# if overlapping=true this gene encodes:
# g1=af, g2=f3, g3=36, g4=6e, g5=e1
# This behaviour can be watched in some forms of viral
# dna and can lead to a much higher genetic variability
# because any mutation that occurs will lead to the
# modification of two instructions.
evo.genome.dnaProgramming.gene.overlapping=true|false
